package main

import (
	"fmt"
	"runtime"
	"time"

	"github.com/bwmarrin/discordgo"
	"github.com/fatih/color"
	"gopkg.in/ini.v1"
)

func registerCommands(sess *discordgo.Session) {
	red := color.New(color.FgRed)
	boldRed := red.Add(color.Bold)

	cmdMenuLogs := discordgo.ApplicationCommand{
		Name:        "logs",
		Description: "–í–∏–ø–∞–¥–∞—é—á–µ –º–µ–Ω—é –∑ –∫–∞–Ω–∞–ª–∞–º–∏",
		Options: []*discordgo.ApplicationCommandOption{
			{
				Type:        7, // –ß–∏—Å–ª–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è –¥–ª—è ApplicationCommandOptionTypeChannel
				Name:        "message_id_channel",
				Description: "–í–≤–µ–¥—ñ—Ç—å ID –∫–∞–Ω–∞–ª—É –¥–ª—è –ª–æ–≥—É–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å",
				Required:    true,
			},
			{
				Type:        7,
				Name:        "voice_id_channel",
				Description: "–í–≤–µ–¥—ñ—Ç—å ID –∫–∞–Ω–∞–ª—É –¥–ª—è –ª–æ–≥—É–≤–∞–Ω–Ω—è –≥–æ–ª–æ—Å–æ–≤–∏—Ö –∫–∞–Ω–∞–ª—ñ–≤",
				Required:    true,
			},
			{
				Type:        7,
				Name:        "server_id_channel",
				Description: "–í–≤–µ–¥—ñ—Ç—å ID –∫–∞–Ω–∞–ª—É –¥–ª—è –ª–æ–≥—É–≤–∞–Ω–Ω—è —Å–µ—Ä–≤–µ—Ä—É (–≤—Ö–æ–¥—É, –≤–∏—Ö–æ–¥—É, –±–∞–Ω—ñ–≤)",
				Required:    true,
			},
		},
	}

	cmdEmojiReactions := &discordgo.ApplicationCommand{
		Name:        "reaction",
		Description: "–í–∏–¥–∞—á–∞ —Ä–æ–ª—ñ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ –ø–æ emoji",
		Type:        discordgo.ChatApplicationCommand,
		Options: []*discordgo.ApplicationCommandOption{
			{
				Type:        discordgo.ApplicationCommandOptionString,
				Name:        "message_id",
				Description: "–í–≤–µ–¥—ñ—Ç—å ID –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞ —è–∫–æ–º—É –±—É–¥—É—Ç—å Emoji",
				Required:    true,
			},
			{
				Type:        discordgo.ApplicationCommandOptionString,
				Name:        "emoji",
				Description: "–í–≤–µ–¥—ñ—Ç—å Emoji —è–∫–µ –º–∞—é—Ç—å –Ω–∞—Ç–∏—Å–∫–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ",
				Required:    true,
			},
			{
				Type:        discordgo.ApplicationCommandOptionString,
				Name:        "role_id",
				Description: "–í–≤–µ–¥—ñ—Ç—å ID —Ä–æ–ª—ñ, —è–∫–∞ –±—É–¥–µ –≤–∏–¥–∞–≤–∞—Ç–∏—Å—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º",
				Required:    true,
			},
		},
	}
	_, err := sess.ApplicationCommandCreate("1160175895475138611", "", &cmdMenuLogs) // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ –≤—ñ–¥–ø—Ä–∞–≤–∫–∞ –∫–æ–º–∞–Ω–¥ !
	if err != nil {
		boldRed.Println("Error creating application command,", err)
		return
	}
	_, err = sess.ApplicationCommandCreate("1160175895475138611", "", cmdEmojiReactions)
	if err != nil {
		boldRed.Println("Error creating application command,", err)
		return
	}
	sess.AddHandler(func(s *discordgo.Session, ic *discordgo.InteractionCreate) { // –ú–æ–¥—É–ª—å –∑—á–∏—Ç—É–≤–∞–Ω–Ω—è –∫–æ–º–∞–Ω–¥ —Ç–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É –≤ —Ñ–∞–π–ª
		if ic.Type == discordgo.InteractionMessageComponent {
			return
		}
		switch {
		case ic.ApplicationCommandData().Name == "menu":
			txt := ic.ApplicationCommandData().Options[0].ChannelValue(s)
			fmt.Println("ID –æ–±—Ä–∞–Ω–æ–≥–æ –∫–∞–Ω–∞–ª—É:", txt.ID)
		case ic.ApplicationCommandData().Name == "logs":
			temp := ic.ApplicationCommandData().Options[0].ChannelValue(s)
			channelID_M := temp.ID
			temp = ic.ApplicationCommandData().Options[1].ChannelValue(s)
			channelID_V := temp.ID
			temp = ic.ApplicationCommandData().Options[2].ChannelValue(s)
			channelID_S := temp.ID

			cfg, err := ini.Load("servers/" + ic.GuildID + "/config.ini")
			if err != nil {
				_, _, lineNumber, _ := runtime.Caller(0)
				currentTime := time.Now()
				timestamp := currentTime.Format("2006-01-02 15:04:05")
				boldRed.Println(timestamp, " –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ–π–Ω–æ–≥–æ —Ñ–∞–π–ª—É: [", lineNumber, "] ", err)
				s.InteractionRespond(ic.Interaction, &discordgo.InteractionResponse{
					Type: discordgo.InteractionResponseChannelMessageWithSource,
					Data: &discordgo.InteractionResponseData{
						Content: "‚õî –í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞. üîß –ó–≤–µ—Ä–Ω—ñ—Ç—å—Å—è —É –ø—ñ–¥—Ç—Ä–∏–º–∫—É –±–æ—Ç–∞.",
						Flags:   1 << 6,
					},
				})
				return
			}
			section := cfg.Section("LOGS")
			section.Key("CHANNEL_LOGS_MESSAGE_ID").SetValue(channelID_M)
			section.Key("CHANNEL_LOGS_VOICE_ID").SetValue(channelID_V)
			section.Key("CHANNEL_LOGS_SERVER_ID").SetValue(channelID_S)
			err = cfg.SaveTo("servers/" + ic.GuildID + "/config.ini")
			if err != nil {
				boldRed.Println("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ–π–Ω–æ–≥–æ —Ñ–∞–π–ª—É: ", err)
				s.InteractionRespond(ic.Interaction, &discordgo.InteractionResponse{
					Type: discordgo.InteractionResponseChannelMessageWithSource,
					Data: &discordgo.InteractionResponseData{
						Content: "‚õî –í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞. üîß –ó–≤–µ—Ä–Ω—ñ—Ç—å—Å—è —É –ø—ñ–¥—Ç—Ä–∏–º–∫—É –±–æ—Ç–∞.",
						Flags:   1 << 6,
					},
				})
				return
			}
			s.InteractionRespond(ic.Interaction, &discordgo.InteractionResponse{
				Type: discordgo.InteractionResponseChannelMessageWithSource,
				Data: &discordgo.InteractionResponseData{
					Content: "üéâ –¢–µ–ø–µ—Ä –≤–∏ –º–æ–∂–µ—Ç–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—å –ª–æ–≥—É–≤–∞–Ω–Ω—è–º –±–æ—Ç–∞! üéâ",
					Flags:   1 << 6,
				},
			})
		case ic.ApplicationCommandData().Name == "reaction":
			message_ID := ic.ApplicationCommandData().Options[0].StringValue()
			emoji_string := ic.ApplicationCommandData().Options[1].StringValue()
			role_ID := ic.ApplicationCommandData().Options[2].StringValue()

			switch {
			case len(message_ID) > 19:
				s.InteractionRespond(ic.Interaction, &discordgo.InteractionResponse{
					Type: discordgo.InteractionResponseChannelMessageWithSource,
					Data: &discordgo.InteractionResponseData{
						Content: "‚ö†Ô∏è –î–æ–≤–∂–∏–Ω–∞ –ø–µ—Ä—à–æ—ó –æ–ø—Ü—ñ—ó –º–∞—î –±—É—Ç–∏ –Ω–µ –±—ñ–ª—å—à–µ 19 —Å–∏–º–≤–æ–ª—ñ–≤",
						Flags:   1 << 6,
					},
				})
				return
			case len(emoji_string) > 10:
				s.InteractionRespond(ic.Interaction, &discordgo.InteractionResponse{
					Type: discordgo.InteractionResponseChannelMessageWithSource,
					Data: &discordgo.InteractionResponseData{
						Content: "‚ö†Ô∏è –î–æ–≤–∂–∏–Ω–∞ –¥—Ä—É–≥–æ—ó –æ–ø—Ü—ñ—ó –º–∞—î –±—É—Ç–∏ –Ω–µ –±—ñ–ª—å—à–µ 10 —Å–∏–º–≤–æ–ª—ñ–≤",
						Flags:   1 << 6,
					},
				})
				return
			case len(role_ID) > 19:
				s.InteractionRespond(ic.Interaction, &discordgo.InteractionResponse{
					Type: discordgo.InteractionResponseChannelMessageWithSource,
					Data: &discordgo.InteractionResponseData{
						Content: "‚ö†Ô∏è –î–æ–≤–∂–∏–Ω–∞ —Ç—Ä–µ—Ç—å–æ—ó –æ–ø—Ü—ñ—ó –º–∞—î –±—É—Ç–∏ –Ω–µ –±—ñ–ª—å—à–µ 19 —Å–∏–º–≤–æ–ª—ñ–≤",
						Flags:   1 << 6,
					},
				})
				return
			}
			cfg, err := ini.Load("servers/" + ic.GuildID + "/config.ini")
			if err != nil {
				boldRed.Println("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ–π–Ω–æ–≥–æ —Ñ–∞–π–ª—É: ", err)
				s.InteractionRespond(ic.Interaction, &discordgo.InteractionResponse{
					Type: discordgo.InteractionResponseChannelMessageWithSource,
					Data: &discordgo.InteractionResponseData{
						Content: "‚õî –í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞. üîß –ó–≤–µ—Ä–Ω—ñ—Ç—å—Å—è —É –ø—ñ–¥—Ç—Ä–∏–º–∫—É –±–æ—Ç–∞.",
						Flags:   1 << 6,
					},
				})
				return
			}
			section := cfg.Section("EMOJI_REACTIONS")
			section.Key("MESSAGE_REACTION_ID").SetValue(message_ID)
			section.Key("EMOJI_REACTION").SetValue(emoji_string)
			section.Key("ROLE_ADD_ID").SetValue(role_ID)
			err = cfg.SaveTo("servers/" + ic.GuildID + "/config.ini")
			if err != nil {
				boldRed.Println("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ–π–Ω–æ–≥–æ —Ñ–∞–π–ª—É: ", err)
				s.InteractionRespond(ic.Interaction, &discordgo.InteractionResponse{
					Type: discordgo.InteractionResponseChannelMessageWithSource,
					Data: &discordgo.InteractionResponseData{
						Content: "‚õî –í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞. üîß –ó–≤–µ—Ä–Ω—ñ—Ç—å—Å—è —É –ø—ñ–¥—Ç—Ä–∏–º–∫—É –±–æ—Ç–∞.",
						Flags:   1 << 6,
					},
				})
				return
			}
			s.InteractionRespond(ic.Interaction, &discordgo.InteractionResponse{
				Type: discordgo.InteractionResponseChannelMessageWithSource,
				Data: &discordgo.InteractionResponseData{
					Content: "üéâ –¢–µ–ø–µ—Ä –≤–∏ –º–æ–∂–µ—Ç–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—å –≤–∏–¥–∞—á–µ—é —Ä–æ–ª–µ–π —á–µ—Ä–µ–∑ Emoji! üéâ",
					Flags:   1 << 6,
				},
			})
		}

	})
}
